{"version":3,"sources":["shared/baseUrl.js","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","urlRoot","Header","props","state","isNavOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","isModalOpen","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","process","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","style","fontSize","verticalAlign","Button","outline","Jumbotron","backgroundImage","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","Component","Footer","Loading","RenderCard","item","isLoading","errMsg","in","transformProps","exitTransform","Card","CardImg","image","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","dish","dishesLoading","dishesErrMsg","promotion","promosLoading","promosErrMsg","leader","leadersLoading","leadersErrMsg","RenderMenuItem","_id","CardImgOverlay","color","background","padding","borderRadius","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","CommentForm","handleSubmit","values","postComment","dishId","rating","author","comment","select","model","text","validators","minLength","show","messages","textarea","rows","RenderDish","dishName","dishImage","dishDesc","RenderComments","comments","viewComments","Date","updatedAt","toLocaleString","DishDetail","required","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","Row","md","Col","placeholder","size","offset","checkbox","RenderLeader","Media","tag","left","middle","object","body","heading","About","RenderLeaders","leaders","leadersList","list","CardHeader","title","addComment","payload","addFeedback","feedback","contacttype","dishesFailed","errmsg","addDishes","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","params","withRouter","connect","dispatch","newComment","date","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","emial","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9ff30c67.chunk.js","sourcesContent":["export const baseUrl = \"https://confusion-server-1001.herokuapp.com/\";\nexport const urlRoot = \"/confusion\";\n","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, \n    NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, \n    Label, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport {  urlRoot } from \"../shared/baseUrl\";\nimport { FaAddressCard, FaHome, FaSignInAlt } from 'react-icons/fa';\nimport { RiInformationFill } from 'react-icons/ri';\nimport { MdRestaurantMenu } from 'react-icons/md';\n\n\nclass Header extends Component{\n    constructor(props){\n        super();\n        this.state = {\n            isNavOpen : false,\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav(){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen,\n            isModalOpen: false,\n        });\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen : !this.state.isModalOpen,\n        });\n    }\n\n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \"\\nPassword: \" + this.password.value \n        + \"\\nRemember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <Navbar dark expand='md'>\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand className='mr-auto' href={urlRoot+\"/home\"}>\n                            <img src = { process.env.PUBLIC_URL + \"/assets/images/logo.png\" } height='30' \n                            width='41' alt='Restorante Fusion Taj'/>\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar >\n                                <NavItem>\n                                    <NavLink className='nav-link' to={urlRoot + '/home'}\n                                        style={{fontSize:20}}>\n                                        <FaHome style={{verticalAlign:\"text-bottom\"}}/>\n                                        <span> Home</span>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className='nav-link' to={urlRoot + '/aboutus'} \n                                        style={{fontSize:20}}>\n                                        <RiInformationFill style={{verticalAlign:\"text-bottom\"}}/>\n                                        <span> About Us</span>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className='nav-link' to={urlRoot + '/menu'}\n                                        style={{fontSize:20}}>\n                                        <MdRestaurantMenu style={{verticalAlign:\"text-bottom\"}}/>\n                                        <span> Menu</span>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className='nav-link' to={urlRoot + '/contactus'}\n                                        style={{fontSize:20}}>\n                                        <FaAddressCard style={{verticalAlign:\"text-bottom\"}}/>\n                                        <span> Contact Us</span>\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className='ml-auto' navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}\n                                        style={{fontSize:20}}>\n                                        <FaSignInAlt style={{verticalAlign:\"text-bottom\"}}/>\n                                        <span> Login</span>\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron style={{backgroundImage:\"url(\" + process.env.PUBLIC_URL + \"/assets/images/bg.jpg)\"}}>\n                    <div className='container'>\n                        <div className='row row-header'>\n                            <div className='col-12 col-sm-6'>\n                                <h1>Ristorante <br/>Fusion Taj</h1>\n                                <p>We take inspiration from the World's best \n                                    cuisines, and create a unique fusion \n                                    experience. Our lipsmacking creation will \n                                    tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor='username'>Username</Label>\n                                <Input type='text' id='username' name='username'\n                                innerRef = {(input) => this.username = input}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor='password'>Password</Label>\n                                <Input type='password' id='password' name='password'\n                                innerRef = {(input) => this.password = input}/>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type='checkbox' name='remember'\n                                    innerRef = {(input) => this.remember = input}/>\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type='submit' value='submit'\n                            className='mt-3 background-dark'>\n                                Login\n                            </Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaGoogle, FaFacebookF, FaLinkedinIn, FaTwitter, FaYoutube, FaPhoneAlt, \n    FaFax } from 'react-icons/fa';\nimport { FiMail } from 'react-icons/fi';\nimport { urlRoot } from '../shared/baseUrl';\n\nfunction Footer(props){\n    return(\n        <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link className=\"link-style\" to={urlRoot+\"/home\"}>Home</Link></li>\n                        <li><Link className=\"link-style\" to={urlRoot+\"/aboutus\"}>About Us</Link></li>\n                        <li><Link className=\"link-style\" to={urlRoot+\"/menu\"}>Menu</Link></li>\n                        <li><Link className=\"link-style\" to={urlRoot+\"/contactus\"}>Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t                Apollo Bandar<br/>\n\t\t                Colaba, Mumbai - 400001<br/>\n\t\t                India<br/>\n\t\t                <FaPhoneAlt/> : +9152 1234 5678<br/>\n\t\t                <FaFax/> : +9152 8765 4321<br/>\n                        <FiMail/> : \n                        <a className=\"link-style\" href=\"mailto:confusion@food.net\">\n                        &nbsp;confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon\" \n                        href=\"http://google.com/+\">\n                            <FaGoogle/></a>\n                        <a className=\"btn btn-social-icon\" \n                        href=\"http://www.facebook.com/profile.php?id=\">\n                            <FaFacebookF/></a>\n                        <a className=\"btn btn-social-icon\" \n                        href=\"http://www.linkedin.com/in/\">\n                            <FaLinkedinIn/></a>\n                        <a className=\"btn btn-social-icon\" \n                        href=\"http://twitter.com/\">\n                            <FaTwitter/></a>\n                        <a className=\"btn btn-social-icon\" \n                        href=\"http://youtube.com/\">\n                            <FaYoutube/></a>\n                        <a className=\"btn btn-social-icon\" \n                        href=\"mailto:\">\n                            <FiMail/></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2020 Ristorante Fusion Taj</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { FaSpinner } from 'react-icons/fa';\n\nexport const Loading = () => {\n    return(\n        <div className='col-12 mt-3'>\n            <p className='text-center'>\n                <FaSpinner className=\"fa-pulse fa-3x fa-fw\"/>\n            </p>\n            <p className='text-center'>Loading. . .</p>\n        </div>\n    );\n}","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMsg}){\n    if(isLoading){\n        return (\n            <Loading/>\n        );\n    }else if(errMsg){\n        return(\n            <h4>{errMsg}</h4>\n        );\n    }else{\n        return(\n            <FadeTransform in\n                transformProps = {{\n                        exitTransform : 'scale(0.5) translateY(-50%)'\n                    }}>\n                <Card>\n                    <CardImg src={ baseUrl + item.image } alt={item.name}/>\n                    <CardBody>\n                        <CardTitle>\n                            {item.name}\n                        </CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }   \n}\n\nfunction Home(props){\n    return(\n        <div className='container'>\n            <div className='row align-items-start'>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard \n                        item={props.dish} \n                        isLoading={props.dishesLoading} \n                        errMsg = {props.dishesErrMsg}/>\n                </div>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promosLoading} \n                        errMsg = {props.promosErrMsg}/>\n                </div>\n                <div className='col-12 col-md m-1'>\n                    <RenderCard item={props.leader}\n                        isLoading={props.leadersLoading} \n                        errMsg = {props.leadersErrMsg}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl,urlRoot } from '../shared/baseUrl';\n\nfunction RenderMenuItem({dish, onClick}){\n    return(\n        <Card>\n            <Link to={`${urlRoot}/menu/${dish._id}`}>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                <CardImgOverlay>\n                    <CardTitle>\n                        <span style={{\n                            color:\"#fff\", \n                            background:\"rgba(28,33,38,0.6)\", \n                            padding:5,\n                            borderRadius:50}}>\n                            {dish.name}\n                        </span>\n                        </CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map((dish) => {\n        return(\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish}/>\n            </div>\n        );\n    });\n    if(props.dishes.isLoading){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <Loading />\n                </div>\n            </div>\n        );\n    }else if(props.dishes.errMsg){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <h4>{props.errMsg}</h4>\n                </div>\n            </div>\n        );\n    }else{\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link className=\"link-style\" to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>Menu</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    { menu }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem, Button, \n    Modal, ModalBody, ModalHeader, Label} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl, urlRoot } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport { FaPencilAlt } from 'react-icons/fa';\n\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >=len);\n\nclass CommentForm extends Component {\n    constructor(props){\n        super();\n        this.state = {\n            isModalOpen: false,\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    toggleModal(){\n        this.setState({isModalOpen : !this.state.isModalOpen});\n    }\n    handleSubmit(values){\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n    render(){\n        return(\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <span><FaPencilAlt/> Submit Comment</span>\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                <Label htmlFor='rating'>Rating</Label>\n                                <Control.select model='.rating' \n                                    name='rating'\n                                    className='form-control'>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                                <Label htmlFor='author' className='mt-2'>Your Name</Label>\n                                <Control.text model='.author' \n                                    id='author' \n                                    name='author'\n                                    className = 'form-control'\n                                    validators = {{\n                                        minLength: minLength(3), \n                                        maxLength: maxLength(15)\n                                    }}/>\n                                <Errors\n                                    className = 'text-danger'\n                                    model = '.author'\n                                    show ='touched'\n                                    messages = {{\n                                        minLength : 'Must be greater than 2 characters',\n                                        maxLength : 'Must be 15 characters or less'\n                                    }}\n                                />\n                                <Label htmlFor='comment' className='mt-2'>Comment</Label>\n                                <Control.textarea \n                                    model='.comment' \n                                    id='comment' \n                                    name='comment'\n                                    className='form-control'\n                                    rows='6'/>\n                            <Button type='submit' value='submit'\n                            className='mt-3 background-dark'>\n                                Submit\n                            </Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\nfunction RenderDish({dishName, dishImage, dishDesc}){\n    if(dishName!=null){\n        return(\n            <div className='col-12 col-md-5 m-1'>\n                <FadeTransform in\n                transformProps = {{\n                        exitTransform : 'scale(0.5) translateY(-50%)'\n                    }}>\n                    <Card>\n                        <CardImg width=\"100%\" src={baseUrl + dishImage} alt={dishName}/>\n                        <CardBody>\n                            <CardTitle>{dishName}</CardTitle>\n                            <CardText>{dishDesc}</CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>\n            </div>\n        );\n    }else{\n        return(\n            <div></div>\n        );\n    }\n}\n\n\nfunction RenderComments({comments, postComment, dishId}){\n    if(comments != null){\n        const viewComments = comments.map((comment)=>{\n            return(\n                <Fade in>\n                    <li key={comment._id}>\n                        <p>{comment.comment}</p>\n                        <p>-- {comment.author}, {new Date(comment.updatedAt).toLocaleString()}</p>\n                    </li>\n                </Fade>\n            );\n        });\n        return(\n            <div className='col-12 col-md-5 m-1'>\n                <h4>Comments</h4>\n                <ul className='list-unstyled'>\n                    <Stagger in>    \n                        { viewComments }\n                    </Stagger>\n                </ul>\n                <CommentForm \n                    postComment={postComment}\n                    dishId={dishId}\n                    />\n            </div>\n        );\n    }\n    else{\n        return(\n            <div>\n                <CommentForm \n                    postComment={postComment}\n                    dishId={dishId}\n                    />\n            </div>\n        );\n    }\n}\n\n\nconst DishDetail = (props) => {\n    if(props.isLoading){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <Loading />\n                </div>\n            </div>\n        );\n    }else if(props.errMsg){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <h4>{props.errMsg}</h4>\n                </div>\n            </div>\n        );\n    }else if(props.dish != null){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link className=\"link-style\" to={urlRoot +'/home'}>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem><Link className=\"link-style\" to={urlRoot +'/menu'}>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>{props.dish.name}</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className='row'>\n                    <RenderDish \n                        dishName={props.dish.name}\n                        dishImage={props.dish.image}\n                        dishDesc={props.dish.description}/>\n                    <RenderComments \n                        comments={props.dish.comments}\n                        postComment={props.postComment}\n                        dishId = {props.dish._id}\n                        />\n                </div>\n            </div>\n        );\n    }\n    else {\n        return(\n            <div></div>\n        );\n    }\n}\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { FaPhoneAlt, FaFax } from 'react-icons/fa';\nimport { FiMail } from 'react-icons/fi';\nimport { urlRoot } from '../shared/baseUrl';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >=len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9._]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props){\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"Current State is : \" + JSON.stringify(values));\n        this.props.postFeedback(values.firstname,values.lastname, values.telnum,\n            values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link className=\"link-style\" to={urlRoot + '/home'}>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className='col-12'>\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            Apollo Bandar<br/>\n                            Colaba, Mumbai - 400001<br/>\n                            India<br/>\n                            <FaPhoneAlt/> : +9152 1234 5678<br/>\n                            <FaFax/> : +9152 8765 4321<br/>\n                            <FiMail/> : \n                            <a className=\"link-style\" href=\"mailto:confusion@food.net\">\n                            &nbsp;confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" \n                            href=\"tel:+85212345678\">\n                                <i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href='./contactus'>\n                                <i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" \n                            href=\"mailto:confusion@food.net\">\n                                <i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className='row row-content'>\n                    <div className='col-12'>\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className='col-12 col-md-9'>\n                        <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                                <Label htmlFor='firstname' md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model='.firstname' id='firstname' \n                                    name='firstname' \n                                    placeholder='First Name'\n                                    className='form-control'\n                                    validators = {{\n                                        required, \n                                        minLength: minLength(3), \n                                        maxLength: maxLength(15)\n                                    }}/>\n                                    <Errors\n                                        className = 'text-danger'\n                                        model = '.firstname'\n                                        show ='touched'\n                                        messages = {{\n                                            required : 'Required',\n                                            minLength : 'Must be greater than 2 characters',\n                                            maxLength : 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='lastname' md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model='.lastname' id='lastname' \n                                    name='lastname' \n                                    placeholder='Last Name'\n                                    className='form-control'\n                                    validators = {{\n                                        required, \n                                        minLength: minLength(3), \n                                        maxLength: maxLength(15)\n                                    }}/>\n                                    <Errors\n                                        className = 'text-danger'\n                                        model = '.lastname'\n                                        show ='touched'\n                                        messages = {{\n                                            required : 'Required',\n                                            minLength : 'Must be greater than 2 characters',\n                                            maxLength : 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='telnum' md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model='.telnum' id='telnum' \n                                    name='telnum' \n                                    placeholder='Contact Tel.'\n                                    className='form-control'\n                                    validators = {{\n                                        required, \n                                        minLength: minLength(10), \n                                        maxLength: maxLength(10), \n                                        isNumber\n                                    }}/>\n                                    <Errors\n                                        className = 'text-danger'\n                                        model = '.telnum'\n                                        show ='touched'\n                                        messages = {{\n                                            required : 'Required',\n                                            minLength : 'Contact must be of 10 digits',\n                                            maxLength : 'Contact must be of 10 digits',\n                                            isNumber : 'Contact must be a number',\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='email' md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model='.email' id='email' \n                                    name='email' \n                                    placeholder='Email'\n                                    className = 'form-control'\n                                    validators = {{\n                                        required,  \n                                        validEmail\n                                    }}/>\n                                    <Errors\n                                        className = 'text-danger'\n                                        model = '.email'\n                                        show ='touched'\n                                        messages = {{\n                                            required : 'Required',\n                                            validEmail : 'Invalid email address',\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size:6, offset:2}}>\n                                    <div className='form-check'>\n                                        <Label check>\n                                            <Control.checkbox model='.agree' \n                                                name='agree'\n                                                className='form-check-input'/>{' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size:3, offset:1}}>\n                                    <Control.select model='.contactType' \n                                        name='contactType'\n                                        className='form-control'>\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor='message' md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model='.message' id='message' \n                                        className='form-control'\n                                        name='message' rows='12'/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size:10, offset:2}}>\n                                    <Button type='submit' className=\"background-dark\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl, urlRoot } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { Fade, Stagger } from 'react-animation-components';\n\n\nfunction RenderLeader({leader,isLoading,errMsg}){\n    if(isLoading){\n        return(\n            <Loading />\n        );\n    }else if(errMsg){\n        return(\n            <h3>{errMsg}</h3>\n        );\n    }else{\n        return(\n            <div key={leader.id} className=\"col-12 mt-5\">\n                <Media tag=\"li\">\n                    <Media left middle>\n                        <Media object \n                            src={baseUrl + leader.image} \n                            alt={leader.name} \n                            style={{borderRadius : 50}}\n                        />\n                    </Media>\n                    <Media body className=\"ml-5\">\n                        <Media heading>{leader.name}</Media>\n                            <p>{leader.designation}</p>\n                            <p>{leader.description}</p>\n                    </Media>\n                </Media>\n            </div>\n        );\n    }\n}\n\nfunction About(props) {\n    const RenderLeaders = ({leaders, isLoading, errMsg}) =>{\n        const leadersList = leaders.map((leader) => {\n            return (\n                <Fade in>\n                    <RenderLeader \n                        leader={leader} \n                        isLoading={props.leaders.isLoading}\n                        errMsg = {props.leaders.errMsg}/>\n                </Fade>\n            );\n        });\n        if(isLoading)\n            return(\n                <Loading/>\n            );\n        else if(errMsg)\n            return(\n                <h4>{errMsg}</h4>\n            );\n        else return(\n            <Media list>\n                <Stagger in> \n                    {leadersList}\n                </Stagger>\n            </Media>\n        );\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link className=\"link-style\" to={ urlRoot + \"/home\"}>Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante Fusion Taj quickly established \n                        itself as a culinary icon par excellence in India. \n                        With its unique brand of world fusion cuisine that can \n                        be found nowhere else, it enjoys patronage from the \n                        A-list clientele in India.  Featuring four of the \n                        best three-star Michelin chefs in the world, you never \n                        know what will arrive on your plate the next time you \n                        visit us.</p>\n                    <p>The restaurant traces its humble beginnings to \n                        <em>The Frying Pan</em>, a successful chain started by \n                        our CEO, Mr. Peter Pan, that featured for the first time \n                        the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"background-dark text-white\">\n                            Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">Tata Groups</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">258</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in \n                                    four pieces because I'm not hungry enough \n                                    to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom \n                                    of Yogi Berra, P. Pepe, \n                                    Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <RenderLeaders \n                        leaders={props.leaders.leaders}\n                        isLoading={props.leaders.isLoading}\n                        errMsg={props.leaders.errMsg}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) =>{\n    const newComment = {\n        rating : rating,\n        author : author,\n        comment: comment,\n    }\n    newComment.date = new Date().toISOString();\n    return fetch( baseUrl +\"dishes/\"+ dishId + \"/comments\", {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type' : 'application/json',\n        },\n        credentials: 'same-origin',\n    })\n    .then(response => {\n        if(response.ok)return response;\n        else{\n            let error = new Error('Error '+ response.status\n                                + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        throw new Error(error.message);\n    })\n    .then(response => response.json())\n    .then(comment => dispatch(addComment(comment)))\n    .catch(error => {\n        console.log(\"Post error : \" + error.message);\n        alert('Your comment could not be posted\\nError: '+ error.message);\n    });\n}\n\nexport const addComment = (comment) => ({\n    type : ActionTypes.ADD_COMMENT,\n    payload: comment,\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contacttype, message) => (dispatch) =>{\n    const newFeedback = {\n        firstname : firstname,\n        lastname : lastname,\n        telnum : telnum,\n        email : email,\n        agree : agree,\n        contacttype: contacttype,\n        message : message,\n    }\n    newFeedback.date = new Date().toISOString();\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type' : 'application/json',\n        },\n        credentials: 'same-origin',\n    })\n    .then(response => {\n        if(response.ok)return response;\n        else{\n            let error = new Error('Error '+ response.status\n                                + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        throw new Error(error.message);\n    })\n    .then(response => response.json())\n    .then(feedback => addFeedback(feedback))\n    .catch(error => {\n        console.log(\"Post error : \" + error.message);\n        alert('Your feedback could not be posted\\nError: '+ error.message);\n    });\n}\n\nexport const addFeedback = (feedback) => {\n    alert('Feedback successfully submitted' +\n        '\\nId     : ' + feedback.id +\n        '\\nName   : ' + feedback.firstname + ' ' + feedback.lastname +\n        '\\nTelnum : ' + feedback.telnum + \n        '\\nEmail  : ' + feedback.email +\n        '\\nAgree  : ' + feedback.agree +\n        '\\nContact: ' + feedback.contacttype+ \n        '\\nMessage: ' + feedback.message);\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + \"dishes\")\n        .then(response => {\n            if(response.ok)return response;\n            else{\n                let error = new Error('Error '+ response.status\n                                    + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            throw new Error(error.message);\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => {\n            dispatch(dishesFailed(error.message));\n        });\n}\n\nexport const dishesLoading = () => ({\n    type : ActionTypes.DISHES_LOADING,\n});\n\nexport const dishesFailed = (errmsg) => ({\n    type : ActionTypes.DISHES_FAILED,\n    payload : errmsg\n})\n\nexport const addDishes = (dishes) => ({\n    type : ActionTypes.ADD_DISHES,\n    payload : dishes,\n})\n\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if(response.ok)return response;\n            else{\n                let error = new Error('Error '+ response.status\n                                    + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            throw new Error(error.message);\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => {\n            dispatch(promosFailed(error.message));\n        });\n}\n\nexport const promosLoading = () => ({\n    type : ActionTypes.PROMOS_LOADING,\n});\n\nexport const promosFailed = (errmsg) => ({\n    type : ActionTypes.PROMOS_FAILED,\n    payload : errmsg\n})\n\nexport const addPromos = (promos) => ({\n    type : ActionTypes.ADD_PROMOS,\n    payload : promos,\n})\n\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if(response.ok)return response;\n            else{\n                let error = new Error('Error '+ response.status\n                                    + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            throw new Error(error.message);\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => {\n            dispatch(leadersFailed(error.message));\n        });\n}\n\nexport const leadersLoading = () => ({\n    type : ActionTypes.LEADERS_LOADING,\n});\n\nexport const leadersFailed = (errmsg) => ({\n    type : ActionTypes.LEADERS_FAILED,\n    payload : errmsg\n})\n\nexport const addLeaders = (leaders) => ({\n    type : ActionTypes.ADD_LEADERS,\n    payload : leaders,\n})","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING ='PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING ='LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n","import React,{ Component } from 'react';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { urlRoot } from '../shared/baseUrl';\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment,postFeedback, fetchDishes , fetchPromos, fetchLeaders} from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        dishes : state.dishes,\n        // comments : state.comments,\n        promotions : state.promotions,\n        leaders : state.leaders,\n    } \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    postComment : (dishId, rating, author, comment) => \n        dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (firstname, lastname, telnum, email, agree, contacttype, message) => \n        dispatch(postFeedback(firstname, lastname, telnum, email, agree, contacttype, message)),\n    fetchDishes: () => {dispatch(fetchDishes())},\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\n    //fetchComments: () => {dispatch(fetchComments())},\n    fetchPromos: () => {dispatch(fetchPromos())},\n    fetchLeaders: () =>{dispatch(fetchLeaders())},\n})\n\nclass Main extends Component{\n\n    componentDidMount(){\n        this.props.fetchDishes();\n        //this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n    render(){\n        const HomePage = () => {\n            return(\n                <Home dish={this.props.dishes.dishes.filter((dish)=>dish.featured)[0]}\n                dishesLoading = {this.props.dishes.isLoading}\n                dishesErrMsg = {this.props.dishes.errMsg}\n                promotion={this.props.promotions.promotions.filter((promo)=>promo.featured)[0]}\n                promosLoading = {this.props.promotions.isLoading}\n                promosErrMsg = {this.props.promotions.errMsg}\n                leader={this.props.leaders.leaders.filter((leader)=>leader.featured)[0]}\n                leadersLoading = {this.props.leaders.isLoading}\n                leadersErrMsg = {this.props.leaders.errMsg}\n                />\n            );\n        }\n\n        const DishWithId = ({match}) => {\n            return(\n                <DishDetail dish={this.props.dishes.dishes.filter(\n                    (dish) => dish._id === match.params.dishId)[0]}\n                    isLoading = {this.props.dishes.isLoading}\n                    errMsg = {this.props.dishes.errMsg}\n                    postComment = {this.props.postComment}\n                    />\n            );\n        }\n\n        return (\n            <div>\n                <Header/>\n                    <TransitionGroup>\n                        <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\n                            <Switch location={this.props.location}>\n                                <Route path={urlRoot+\"/home\"} component={ HomePage }/>\n                                <Route exact path={urlRoot+\"/menu\"} \n                                component={ ()=> <Menu dishes={this.props.dishes}/>}/>\n                                <Route path={urlRoot+\"/menu/:dishId\"} component={ DishWithId }/>\n                                <Route exact path={urlRoot + \"/contactus\"}\n                                component={ ()=> \n                                    <Contact \n                                        resetFeedbackForm={this.props.resetFeedbackForm}\n                                        postFeedback = {this.props.postFeedback}\n                                        />}/>\n                                <Route exact path={urlRoot+\"/aboutus\"} \n                                component={() => \n                                    <About \n                                        leaders={this.props.leaders}\n                                    />}/>\n                                <Redirect to={urlRoot+\"/home\"}/>\n                            </Switch>\n                        </CSSTransition>\n                    </TransitionGroup>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading : true,\n    errMsg : null,\n    dishes : [],\n}, action) =>{\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMsg: null, dishes: action.payload}\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMsg: null, dishes: []}\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMsg: action.payload, dishes: []}\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMsg : null,\n    comments: [],\n}, action) =>{\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMsg: null, comments: action.payload}\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMsg: action.payload, comments: []}\n        case ActionTypes.ADD_COMMENT:\n            return {...state, comments: state.comments.concat(action.payload)};\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMsg : null,\n    promotions : [],\n}, action) =>{\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMsg: null, promotions: action.payload}\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMsg: null, promotions: []}\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMsg: action.payload, promotions: []}\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes'\n\nexport const Leaders = (state = {\n    isLoading : true,\n    errMsg : null,\n    leaders: [],\n}, action) =>{\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMsg: null, leaders: action.payload}\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMsg: null, leaders: []}\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMsg: action.payload, leaders: []}\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname : '',\n    lastname : '',\n    telnum : '',\n    emial: '',\n    agree: false,\n    contactType: 'Tel.',\n    message:'',\n}","import React,{ Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore'\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n    render(){  \n        return (\n            <Provider store={ store }>\n                <BrowserRouter>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { InitialFeedback } from './forms';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes : Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger),\n    );\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}